---
import "../styles/reset.css" 
import "../styles/style.css" 
import { getCollection } from "astro:content";
import { filesize } from "filesize";
import { POSTS_PATH } from "../constants";

let allPosts = (await getCollection("posts")).filter(
	(x) => !x.slug.includes("drafts"),
);
const postsJson = JSON.stringify(allPosts, null, 4);

allPosts.sort((a, b) => b.date - a.date);

const logs = await getCollection("logs");
const logsAttributes = logs[0];

const iconMappings = {
	".md": "ri-markdown-line",
};
const archiveDate = new Date("2022-03-24");
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Suraj Yadav</title>
	</head>
	<body>
		<h2>Index of /suraj</h2>
		<!-- <pre>{postsJson}</pre>
		<pre>{logs}</pre> -->
		<table>
			<thead>
				<tr>
					<td>Name</td>
					<td>Timestamp</td>
					<td>Size</td>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td class="post-title">
						<>
							<i class="ri-markdown-line"></i>
							<a href="/logs" class="post-link">logs</a>
						</>
					</td>
					<td
						title={archiveDate.toISOString().substring(0, 10)}
						class="post-date">{logsAttributes.data.date.getTime()}</td
					>
					<td class="post-size">{filesize(logsAttributes.body.length)}</td>
				</tr>
				{
					allPosts.map(({ id: title, slug, body, data: { date } }) => (
						<tr>
							<td class="post-title">
								<>
									<i class="ri-markdown-line" />
									<a href={`/posts/${slug}`} class="post-link">
										{title}
									</a>
								</>
							</td>
							<td title={date.toISOString().substring(0, 10)} class="post-date">
								{date.getTime()}
							</td>
							<td class="post-size">{filesize(body.length)}</td>
						</tr>
					))
				}
			</tbody>
		</table>
	</body>
</html>

